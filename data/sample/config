# SAMPLE CONFIGURATION
# if measurements have the same name the latest one's size is used (furthest down in the file)!

# specify the protocol for packets to use (must be set at some point)
protocol = udp

# the port we send packets from
# if not specified (or set to 0), the OS will decide
port = 8080

# set a multicast address that the receiver will send packets to (ground software should listen on this address)
# optional, if not set will receive at IP address of default interface
multicast = 224.0.0.1

# device name
name = sample_device

# trigger file
triggers = triggers

# constants file
constants = consts

# network devices
# specified by lines starting with 'net'

# creates a network device in automatic configuration
# automatic configuration stores the source IP of packets sent to the listed port
# when someone tries to send over this device, it will be sent to that IP
net DEVICE_NAME auto 8080

# [measurement name] [total measurement size in bytes] [optional type of int, float, or string, default is int] [optional endianness, big or little (default)] [optional signed or unsigned, default is signed]
# endianness and signed/unsigned cannot be specified without a type
# the order of signedness and type do not matter
# endianness is effectively ignored for strings (doesn't make sense)
TEST            4 int unsigned little
TEST2           2 int little unsigned
TEST3           4 float little
TEST4           10 string big
VIRTUAL_VALUE   4 int unsigned
VIRTUAL_VALUE2  4 int unsigned

# telemetry packets, number is the port that the receiver will send packets TO on the ground station
8081 {
TEST
TEST2
TEST3
TEST4
}

8082 {
TEST
}

8083 {
TEST2
}

8084 {
TEST3
TEST4
}

# virtual telemetry is data generated by the ground software and does not come
# from over the network
virtual {
VIRTUAL_VALUE
VIRTUAL_VALUE2
}

virtual {
VIRTUAL_VALUE
}

virtual {
VIRTUAL_VALUE2
}
